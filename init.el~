;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)


;; UI defaults
(tooltip-mode -1)
(tool-bar-mode -1)
(menu-bar-mode -1)


(blink-cursor-mode -1)

(hl-line-mode 1)

(global-linum-mode 1)

(delete-selection-mode 1)
(save-place-mode 1)

(electric-pair-mode 1)
(show-paren-mode 1)

(setq use-dialog-box nil)

;; all confirmations will now be only y-or-n instead of yes-or-no
(defalias 'yes-or-no-p 'y-or-n-p)


(setq column-number-mode 1)

(global-auto-revert-mode 1)
(size-indication-mode 1)

(set-language-environment "UTF-8")

(use-package neotree)

(require 'package)
(setq package-enable-at-startup nil)


(setq package-archives '(("org"       . "http://orgmode.org/elpa/")
			 ("gnu"       . "http://elpa.gnu.org/packages/")
			 ("melpa"     . "https://melpa.org/packages/")
			 ("marmalade" . "http://marmalade-repo.org/packages/")))
(package-initialize)



(unless (package-installed-p 'use-package) ; unless it is already installed
  (package-refresh-contents) ; updage packages archive
  (package-install 'use-package)) ; and install the most recent version of use-package
(eval-when-compile
  (require 'use-package))

(setq use-package-always-ensure t)



(defun cleanup-and-save-buffer()
  "Save the buffer and cleanup whitespace."
  (interactive)
  (progn
    (whitespace-cleanup)
    (save-buffer)))

;; map s-s to cleanup-and-save-buffer instead of save-buffer
(global-set-key (kbd "C-S-s") 'cleanup-and-save-buffer)



;;; put all themes here
;;(use-package ahungry)
;;(use-package rebecca-theme)
;;(use-package dracula-theme)
(use-package darktooth-theme)


;;; uncomment the next line for monokai theme
;;(use-package molokai-theme)


;;; text editing plugins

(use-package iedit)




(use-package emojify
  :init
  (add-hook 'after-init-hook #'global-emojify-mode))


(use-package general
  :init
  (general-evil-setup t)

  (progn
    (setq general-default-keymaps
	  '(evil-normal-state-map
	    evil-visual-state-map))))

(general-define-key
 "'" '(multi-term :which-key "shell")
 "SPC" '(counsel-M-x :which-key "M-x")
 "TAB" '(ivy-switch-buffer :which-key "prev buffer"))




(use-package evil
  :init
  (evil-mode 1)
  :config
  (progn
    (define-key evil-motion-state-map "/" 'swiper)))



(use-package company
  :init
  (add-hook 'after-init-hook 'global-company-mode)
  :config
  (setq company-idle-delay 0)
  (setq company-echo-delay 0)
  (setq company-minimum-prefix-length 3)
  (setq company-selection-wrap-around t)
  (company-tng-configure-default)

  (add-to-list 'company-backends 'company-jedi)
  (add-to-list 'company-backends 'company-tern))



(use-package company-quickhelp
  :config
  (company-quickhelp-mode)
  )




(with-eval-after-load 'company
  (define-key company-active-map (kbd "M-n") nil)
  (define-key company-active-map (kbd "M-p") nil)
  )



(use-package yasnippet
  :init
  (yas-global-mode))



;;; uncomment the next lines for turning elpy mode on

;;; setting up elpy mode for python programming
;; (use-package elpy
;;   :init
;;   (add-hook 'python-mode-hook 'elpy-enable)
;;   :config
;;   (;;setq python-shell-interpreter "ipython"
;;    ;;python-shell-interpreter-args "-i --simple-prompt"
;;    setq elpy-rpc-backend "jedi"))
;; (use-package flycheck
;;   :config
;;   (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
;;   (add-hook 'elpy-mode-hook 'flycheck-mode))


;; (use-package py-autopep8
;;   :init
;;   (add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save))

;;; elpy mode ends here


;;; anaconda mode -- alternative for elpy mode -- more responsive and less sluggish

;; old anaconda config -- works
;; (use-package anaconda-mode
;;   :init
;;   (add-hook 'python-mode-hook 'anaconda-mode)
;;   ;;(add-hook 'python-mode-hook 'anaconda-eldoc-mode-hook) ; doesn't work for some reason
;;   :config
;;   (progn
;;     (require 'rx)
;;     (eval-after-load "company"
;;       '(add-to-list 'company-backends 'company-anaconda))))

;; new anaconda config


(use-package anaconda-mode
  :config
  (add-hook 'python-mode-hook 'anaconda-mode)
  )

(use-package company-anaconda
  :init
  (require 'rx)
  :after (company)
  :config
  (add-to-list 'company-backends 'company-anaconda))

;;; setup emacs for c/c++ programming -- try for ide like capabilities 

;; (use-package lsp-mode :commands lsp)

;; (use-package lsp-ui :commands lsp-ui-mode)

;; (use-package company-lsp
;;   :commands company-lsp
;;   :config (push 'company-lsp company-backends))

;; (use-package ccls
;;   :config
;;   (setq ccls-executable "ccls")
;;   (setq lsp-prefer-flymake nil)
;;   (setq-default flycheck-disabled-checkers '(c/c++-clang c/c++-cppcheck c/c++-gcc))
;;   :hook
;;   ((c-mode c++-mode) . (lambda () (require 'ccls) (lsp))))


(use-package irony
  :config
  (progn
    (add-hook 'c++-mode-hook 'irony-mode)
    (add-hook 'c-mode-hook 'irony-mode)
    (add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
    (add-hook 'irony-mode-hook 'company-irony-setup-begin-commands)
    (add-to-list 'company-backends 'company-irony)))

(use-package company-c-headers
  :config
  (add-to-list 'company-c-headers-path-system "$ROOTSYS/include")
  (add-to-list 'company-backends 'company-irony))


;; emacs ycmd mode






;; init file ends here

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (molokai)))
 '(custom-safe-themes
   (quote
    ("274fa62b00d732d093fc3f120aca1b31a6bb484492f31081c1814a858e25c72e" "88049c35e4a6cedd4437ff6b093230b687d8a1fb65408ef17bfcf9b7338734f6" "34dc2267328600f3065630e161a8ae59939700684c232073cdd5afbf78456670" "0f1733ad53138ddd381267b4033bcb07f5e75cd7f22089c7e650f1bb28fc67f4" "fa477d10f10aa808a2d8165a4f7e6cee1ab7f902b6853fbee911a9e27cf346bc" "562c2a97808ab67d71c02d50f951231e4a6505f4014a01d82f8d88f5008bbe88" "a9d67f7c030b3fa6e58e4580438759942185951e9438dd45f2c668c8d7ab2caf" "bee55ba5e878d0584db9b2fb33f75c348a3008fcfe8e05ab8cae897ca604fd95" "ef07cb337554ffebfccff8052827c4a9d55dc2d0bc7f08804470451385d41c5c" "f07729f5245b3c8b3c9bd1780cbe6f3028a9e1ed45cad7a15dd1a7323492b717" "9f08dacc5b23d5eaec9cccb6b3d342bd4fdb05faf144bdcd9c4b5859ac173538" "51043b04c31d7a62ae10466da95a37725638310a38c471cc2e9772891146ee52" "030346c2470ddfdaca479610c56a9c2aa3e93d5de3a9696f335fd46417d8d3e4" "886fe9a7e4f5194f1c9b1438955a9776ff849f9e2f2bbb4fa7ed8879cdca0631" "11e57648ab04915568e558b77541d0e94e69d09c9c54c06075938b6abc0189d8" "bd7b7c5df1174796deefce5debc2d976b264585d51852c962362be83932873d9" "20bf9f519f78b247da9ccf974c31d3537bee613ff11579f539b2781246dee73b" default)))
 '(package-selected-packages
   (quote
    (kaolin-themes darktooth-theme draktooth-theme dracula-theme rebecca-theme rebecca ahungry neotree w3 w3m company-anaconda company-quickhelp paredit company-tern all-the-icons-ivy all-the-icons-dired all-the-icons ahungry-theme ein py-autopep8 flycheck elpy jedi molokai-theme magit rainbow-mode counsel multi-term ivy monokai-theme use-package)))
 '(pdf-view-midnight-colors (quote ("#FDF4C1" . "#282828")))
 '(pos-tip-background-color "#36473A")
 '(pos-tip-foreground-color "#FFFFC8")
 '(red "#ffffff"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
